#ifndef SERVER_H
#define SERVER_H

#include "terminal.h"
#include <QFile>
#include <QFileInfo>
#include <QListWidget>
#include <QMainWindow>
#include <QPlainTextEdit>
#include <QTcpServer>
#include <QTcpSocket>

QT_BEGIN_NAMESPACE
namespace Ui
{
    class Server;
}
QT_END_NAMESPACE

class Server : public QMainWindow
{
    Q_OBJECT

public:
    Server(QWidget *parent = nullptr);
    bool sendSignal(QTcpSocket *socket, QString signal);
    bool sendFile(QTcpSocket *socket, QString signal, QString filePath);
    ~Server();

private slots:
    void newConnection();
    void appendToSocketList(QTcpSocket *socket);
    void readSocket();
    void discardSocket();
    void displayError(QAbstractSocket::SocketError socketError);

    void on_listWidget_itemClicked(QListWidgetItem *item);

    void new_command(QString to_who, QString command);

private:
    Ui::Server *ui;
    std::map<QString, QTcpSocket *> clients;
    std::map<QTcpSocket *, Terminal *> terminals;
    QTcpServer *server;
    QTcpSocket *socket;
};
#endif // SERVER_H
